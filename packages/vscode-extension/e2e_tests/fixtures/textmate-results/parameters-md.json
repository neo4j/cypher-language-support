[
  {
    "character": "#",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown punctuation.definition.heading.markdown"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown"
  },
  {
    "character": "Parameters test",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown entity.name.section.markdown"
  },
  {
    "character": "```",
    "type": "text.html.markdown markup.fenced_code.block.markdown punctuation.definition.markdown"
  },
  {
    "character": "cypher",
    "type": "text.html.markdown markup.fenced_code.block.markdown fenced_code.block.language.markdown"
  },
  {
    "character": "MATCH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "   ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// Test with and without spaces",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "   ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// This is here because at some point param maps inside labels where not picked up correctly",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "   (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "n",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "Label",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.class"
  },
  {
    "character": " {",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "one",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "param1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "two",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "param2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "three",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "param3",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "}),",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "   (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "m",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "Label",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.class"
  },
  {
    "character": " {",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "one",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "param1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "})",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "RETURN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "param1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "param2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "n",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "m",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", {",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "key",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "value",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "}",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "```",
    "type": "text.html.markdown markup.fenced_code.block.markdown punctuation.definition.markdown"
  }
]
