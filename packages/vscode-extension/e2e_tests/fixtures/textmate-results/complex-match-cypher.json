[
  {
    "character": "/* This is a ",
    "type": "source.cypher comment.block"
  },
  {
    "character": "multiline comment",
    "type": "source.cypher comment.block"
  },
  {
    "character": "*/",
    "type": "source.cypher comment.block"
  },
  {
    "character": "MATCH",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": " (u1",
    "type": "source.cypher"
  },
  {
    "character": ":",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "CommerceUser",
    "type": "source.cypher entity.name.class"
  },
  {
    "character": "{user_id",
    "type": "source.cypher"
  },
  {
    "character": ":",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "$",
    "type": "source.cypher"
  },
  {
    "character": "seller_id",
    "type": "source.cypher entity.name.class"
  },
  {
    "character": "}),",
    "type": "source.cypher"
  },
  {
    "character": "      (u2",
    "type": "source.cypher"
  },
  {
    "character": ":",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "CommerceUser",
    "type": "source.cypher entity.name.class"
  },
  {
    "character": "{user_id",
    "type": "source.cypher"
  },
  {
    "character": ":",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "$",
    "type": "source.cypher"
  },
  {
    "character": "customer_id",
    "type": "source.cypher entity.name.class"
  },
  {
    "character": "}), ",
    "type": "source.cypher"
  },
  {
    "character": "    p ",
    "type": "source.cypher"
  },
  {
    "character": "=",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "source.cypher"
  },
  {
    "character": "allShortestPaths",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": "((u1)",
    "type": "source.cypher"
  },
  {
    "character": "-",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "[",
    "type": "source.cypher"
  },
  {
    "character": ":",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "PURCHASE",
    "type": "source.cypher entity.name.class"
  },
  {
    "character": "*.",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": ".{{",
    "type": "source.cypher"
  },
  {
    "character": "depth",
    "type": "source.cypher variable.property"
  },
  {
    "character": "}}]",
    "type": "source.cypher"
  },
  {
    "character": "->",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "(u2))",
    "type": "source.cypher"
  },
  {
    "character": "WHERE",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": " u1 ",
    "type": "source.cypher"
  },
  {
    "character": "<>",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " u2",
    "type": "source.cypher"
  },
  {
    "character": "WITH",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": " ",
    "type": "source.cypher"
  },
  {
    "character": "    ",
    "type": "source.cypher"
  },
  {
    "character": "// This is a single line comment",
    "type": "source.cypher comment.line"
  },
  {
    "character": "    reduce(output ",
    "type": "source.cypher"
  },
  {
    "character": "=",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " [], n ",
    "type": "source.cypher"
  },
  {
    "character": "IN",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": " relationships(p) ",
    "type": "source.cypher"
  },
  {
    "character": "|",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " output ",
    "type": "source.cypher"
  },
  {
    "character": "+",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " n",
    "type": "source.cypher"
  },
  {
    "character": ".",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "create_time",
    "type": "source.cypher variable.property"
  },
  {
    "character": ".",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "epochMillis",
    "type": "source.cypher variable.property"
  },
  {
    "character": " ) as relsDate,",
    "type": "source.cypher"
  },
  {
    "character": "    reduce(output ",
    "type": "source.cypher"
  },
  {
    "character": "=",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " [], n ",
    "type": "source.cypher"
  },
  {
    "character": "IN",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": " nodes(p) ",
    "type": "source.cypher"
  },
  {
    "character": "|",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " output ",
    "type": "source.cypher"
  },
  {
    "character": "+",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": " n ) as nodes",
    "type": "source.cypher"
  },
  {
    "character": "    ",
    "type": "source.cypher"
  },
  {
    "character": "\"double quoted string\"",
    "type": "source.cypher string.quoted.double"
  },
  {
    "character": " as a,",
    "type": "source.cypher"
  },
  {
    "character": "    ",
    "type": "source.cypher"
  },
  {
    "character": "'single quoted string'",
    "type": "source.cypher string.quoted.single"
  },
  {
    "character": " as b",
    "type": "source.cypher"
  },
  {
    "character": "RETURN",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": " relsDate, nodes ",
    "type": "source.cypher"
  },
  {
    "character": "LIMIT",
    "type": "source.cypher keyword.control.cypher"
  },
  {
    "character": " ",
    "type": "source.cypher"
  },
  {
    "character": "$",
    "type": "source.cypher keyword.operator"
  },
  {
    "character": "limit",
    "type": "source.cypher"
  }
]
