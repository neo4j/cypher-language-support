[
  {
    "character": "#",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown punctuation.definition.heading.markdown"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown"
  },
  {
    "character": "Tic tac toe",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown entity.name.section.markdown"
  },
  {
    "character": "```",
    "type": "text.html.markdown markup.fenced_code.block.markdown punctuation.definition.markdown"
  },
  {
    "character": "cypher",
    "type": "text.html.markdown markup.fenced_code.block.markdown fenced_code.block.language.markdown"
  },
  {
    "character": "CALL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " {",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CALL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " {",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "UNWIND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "range(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "4",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "MATCH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "p",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "Cell",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.class"
  },
  {
    "character": ")(()",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "-",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "[",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "r",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "r",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "]",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "->",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "()){",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "4",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "}(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OPTIONAL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "MATCH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "before_start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "-",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "[",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "r0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "]",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "->",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "          ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "r0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OPTIONAL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "MATCH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "-",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "[",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "r5",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "]",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "->",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "after_end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "          ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "r5",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "RETURN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "p",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "before_start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "after_end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "  } ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// -- all valid paths",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "all(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "nodes(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "p",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OR",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "symbol",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OR",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "            ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "all(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "nodes(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "p",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OR",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "symbol",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// -- exclude all paths that include both symbols since they cannot lead to victory",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "before_start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NOT",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "before_start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "after_end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NOT",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "after_end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "size(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "[",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "nodes(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "p",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "symbol",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "]) ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "myScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "size(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "[",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "nodes(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "p",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "node",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "symbol",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "]) ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "otherScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// -- the two size filters above are enough, since any path including both symbols have already been excluded above",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "UNWIND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "nodes(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "p",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "myScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "4",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "otherScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "4",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// -- 2 means it is my win, 1 means that opponent could win in next move",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "myScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "3",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ((",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OR",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ")) ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "     ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "otherScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "3",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ((",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OR",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ")) ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isThreeWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "myScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "3",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "otherScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "3",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "myScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ((",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OR",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ")) ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "otherScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ((",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "end",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "OR",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "<>",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "start",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ")) ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "direction",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "max(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "isWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "maxIsWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "max(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "isThreeWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "maxIsThreeWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "max(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "isMyThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "maxIsMyThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "max(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "isOtherThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "maxIsOtherThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "max(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "isMyTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "maxIsMyTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "max(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "isOtherTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "maxIsOtherTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "myScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "+",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "otherScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "+",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "toInteger(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "openEnded",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "))) ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidateScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// -- give an additional point for open-ended paths, as a heuristic",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "maxIsWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "maxIsThreeWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isThreeWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "maxIsMyThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyThreeMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "maxIsOtherThreeMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherThreeMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "maxIsMyTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyTwoMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "maxIsOtherTwoMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherTwoMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "sum(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "candidateScore",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "+",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "count(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "score",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// -- give one point extra for each direction that a candidate advances play in, as a heuristic",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CASE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyThreeMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherThreeMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyThreeMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyTwoMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherThreeMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AND",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherTwoMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isMyTwoMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isOtherTwoMoveSum",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ">=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "2",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "THEN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "      ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ELSE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "0",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "END",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isFork",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ORDER",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "BY",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "DESC",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isThreeWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "DESC",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isFork",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "DESC",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "score",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "DESC",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "LIMIT",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "RETURN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "UNION",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// -- When the game will for sure end in a tie we still need to update the game",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "MATCH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " (",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WHERE",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "IS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "NULL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "RETURN",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "-",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "AS",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "LIMIT",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "}",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "WITH",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "*",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "ORDER",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "BY",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "isWinningMove",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "DESC",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": "LIMIT",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "1",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "SET",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "candidate",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ".",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": "state",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable.property"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "=",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "$",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.namespace"
  },
  {
    "character": "symbol",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": "```",
    "type": "text.html.markdown markup.fenced_code.block.markdown punctuation.definition.markdown"
  }
]
