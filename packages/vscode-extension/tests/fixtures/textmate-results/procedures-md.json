[
  {
    "character": "#",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown punctuation.definition.heading.markdown"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown"
  },
  {
    "character": "Procedures test",
    "type": "text.html.markdown markup.heading.markdown heading.1.markdown entity.name.section.markdown"
  },
  {
    "character": "```",
    "type": "text.html.markdown markup.fenced_code.block.markdown punctuation.definition.markdown"
  },
  {
    "character": "cypher",
    "type": "text.html.markdown markup.fenced_code.block.markdown fenced_code.block.language.markdown"
  },
  {
    "character": "CALL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "apoc.periodic.iterate(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "\"MATCH (p:Person) RETURN p\"",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher string.quoted.double"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "// Extract `p` variable using list comprehension",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher comment.line"
  },
  {
    "character": "  ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "\"CALL apoc.nodes.delete([item in $_batch | item.p], size($_batch))\"",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher string.quoted.double"
  },
  {
    "character": ",",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "  {",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "batchMode",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "\"BATCH_SINGLE\"",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher string.quoted.double"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "batchSize",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ":",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword.operator"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "100",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher constant.numeric"
  },
  {
    "character": "}",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "YIELD",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "batch",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ", ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "operations",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher variable"
  },
  {
    "character": ";",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CALL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "apoc.coll.elements(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": ") ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CALL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "apoc   . coll . elements(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CALL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "`apoc` . coll . `elements`(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "CALL",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher keyword"
  },
  {
    "character": " ",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "`apoc.coll.elements`(",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher entity.name.function"
  },
  {
    "character": ")",
    "type": "text.html.markdown markup.fenced_code.block.markdown meta.embedded.block.cypher"
  },
  {
    "character": "```",
    "type": "text.html.markdown markup.fenced_code.block.markdown punctuation.definition.markdown"
  }
]
